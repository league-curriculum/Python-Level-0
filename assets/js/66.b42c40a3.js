(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{347:function(t,e,a){"use strict";a.r(e);var n=a(14),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"unpacking-tuples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unpacking-tuples"}},[t._v("#")]),t._v(" Unpacking Tuples")]),t._v(" "),e("p",[t._v('Python has a neat feature called "Unpacking". You can assign a list to multiple\nvariables at once!')]),t._v(" "),e("p",[t._v("So, you already know how to do this:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),e("p",[t._v("But, you can also do this:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Unpacking")]),t._v("\nx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Same thing, but boring")]),t._v("\nx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\ny "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),e("p",[t._v("Unpacking involves something called a "),e("em",[t._v("tuple")]),t._v(". A tuple is like a list, but\nunlike a list, you can't change it once it is created. Tuples are created by\nputting commas between things, and you can put parentheses around it to make\nit more clear. So these are all tuples:")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"297",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0At1%20%3D%201%2C2%2C3%0Aprint%28t1%29%0A%0At2%20%3D%20%281%2C2%2C3%29%0Aprint%28t2%29%0A%0A%23%20A%20tuple%20with%20one%20item%21%0At3%20%3D%206%2C%20%0Aprint%28t3%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("You can assign one tuple to another, but (mostly) they have to be the same\nsize. ( they can be different sizes but we'll save that for later. )")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"246",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=t1%20%3D%201%2C2%2C3%0Aprint%28t1%29%0Ax%2Cy%2Cz%20%3D%20t1%0Aprint%28x%29%0Aprint%28y%29%0Aprint%28z%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("But the code below would be an error, because on the left side, the tuple has three\nelements, but there are only two on the left.")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"246",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=t1%20%3D%201%2C2%2C3%0Aprint%28t1%29%0A%0Ax%2Cy%20%3D%20t1%0Aprint%28x%29%0Aprint%28y%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Now that you know about tuples, you will see them in a lot of places in Python programs.")]),t._v(" "),e("h2",{attrs:{id:"zip-and-enumerate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zip-and-enumerate"}},[t._v("#")]),t._v(" Zip and Enumerate")]),t._v(" "),e("p",[t._v("The really important part about tuples is when they are used in two important\nfunctions, "),e("code",[t._v("enumerate()")]),t._v(" and "),e("code",[t._v("zip()")])]),t._v(" "),e("p",[t._v('Enumerate means "to count out, one by one", and the '),e("code",[t._v("enumerate()")]),t._v(" function will count things for us. Here is how we use it:")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Al%20%3D%20%5B%27zero%27%2C%20%27one%27%2C%20%27two%27%2C%20%27three%27%2C%27%20four%27%5D%0A%0A%0Afor%20e%20in%20enumerate%28l%29%3A%0A%20%20%20%20print%28e%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Hmmm .. it looks like it printed out tuples! In each tuple, the first element\nis the number, and the second is the item. But, we know that we can unpack\ntuples, so we could also write:")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Al%20%3D%20%5B%27zero%27%2C%20%27one%27%2C%20%27two%27%2C%20%27three%27%2C%27%20four%27%5D%0A%0A%23%20change%20%27e%27%20to%20numnber%2C%20item%0Afor%20number%2C%20item%20in%20enumerate%28l%29%3A%20%0A%20%20%20%20print%28str%28number%29%20%2B%20%22%20%22%20%2B%20str%28item%29%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Enumerate is a very powerful way to count the things that we are iterating over.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("zip()")]),t._v(" function is another very important function. Zip takes one or more\niterables, like strings, lists and tuples, and returns a tupe with the first one from each, then the second, then the third.")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"348",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Al%20%3D%20%5B%27one%27%2C%20%27two%27%2C%20%27three%27%2C%20%27four%27%2C%20%27five%27%5D%0At%20%3D%20%28%27uno%27%2C%20%27dos%27%2C%20%27tres%27%2C%20%27cuatro%27%2C%20%27cinco%27%29%0As%20%3D%20%2212345%22%0A%0Afor%20e%20in%20zip%28l%2C%20t%2C%20s%29%3A%0A%20%20%20%20print%28e%29%0A%0A%23%20or%2C%20Unpack%21%0Aprint%28%22%22%29%0Afor%20a%2C%20b%2C%20c%20in%20zip%28l%2C%20t%2C%20s%29%3A%0A%20%20%20%20print%28str%28a%29%20%2B%20%22%20%22%20%2B%20str%28b%29%20%2B%20%22%20%22%20%2Bstr%28c%29%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("As you can see, the first tuple is the first item from each of the iterables.\nThe second tuple is the second item from all of the tuples, etc.")]),t._v(" "),e("h2",{attrs:{id:"a-zippy-program"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-zippy-program"}},[t._v("#")]),t._v(" A Zippy Program")]),t._v(" "),e("p",[t._v("Write a program that has three lists or tuples that have commands for your turtle.")]),t._v(" "),e("ul",[e("li",[t._v("One list has 10 distances to move ( "),e("code",[t._v("forward")]),t._v(" from our previous programs).")]),t._v(" "),e("li",[t._v("One list has the direction to turn ( called "),e("code",[t._v("left")]),t._v(" in past programs )")]),t._v(" "),e("li",[t._v("One list has colors for the turle's pen")])]),t._v(" "),e("p",[t._v("Zip all of the lists together, then unpack them in a loop, and call a function\nwith the values that makes your turtle change color, turn, and move.")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"600",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me for a hint")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("\nturtle "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nmoves "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nturns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ncolors "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("move_turtle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    turtle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    turtle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    turtle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("turn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" move"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" turn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n\n")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);