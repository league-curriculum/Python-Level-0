(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{339:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"loops-for-easy-squares"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loops-for-easy-squares"}},[t._v("#")]),t._v(" Loops for Easy Squares")]),t._v(" "),e("p",[t._v("Here is how some students solve the last exercise, using variables to draw a square.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" turtle\ntina "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" turtle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Turtle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"turtle"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nforward "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\nleft "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forward"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v('Notice that there is a lot of repetition in this program. Can we make this\nprogram shorter by getting rid of the repetition? Yes, we can, with loops.  A\nloop is a bit of code that causes the computer to do something multiple\ntimes. Here is a loop for printing "Hello!" mutiple times. How many times do\nyou think it will print?')]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Afor%20i%20in%20range%284%29%3A%0A%20%20%20%20print%28%22Hello%21%22%29%0A%0A%23%20Now%20change%20the%20program%20to%20make%20%0A%23%20it%20print%20hello%206%20times.%20%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Let's look at that in more detail:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The first line in the loop defines the loop and tells us how many times to do\nthe body of the loop. The body of the loop, the "),e("code",[t._v('print("Hello!")')]),t._v(" part,  is\nindented. The "),e("code",[t._v("range")]),t._v(" part will run the number of times inside the\nparenthesis, in this case 4.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("i")]),t._v(" part is also special; it is a variable. So, you could print it out too.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"make-a-better-square"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#make-a-better-square"}},[t._v("#")]),t._v(" Make a Better Square.")]),t._v(" "),e("p",[t._v("Here is our way of solving the square exercise. Can you edit this\nprogram to make it much better, by replacing the repetition with a loop?")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"433",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=import%20turtle%0Atina%20%3D%20turtle.Turtle%28%29%0Atina.shape%28%22turtle%22%29%0A%0Aforward%20%3D%2050%0Aleft%20%3D%2090%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Once you have used a loop to help Tony make a square, try making other shapes,\nlike a triangle, a pentagon, or a hexagon, or maybe even a ... hendecagon.\n(if you can figure out what that is. )")]),t._v(" "),e("h2",{attrs:{id:"badgers-badgers-badgers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#badgers-badgers-badgers"}},[t._v("#")]),t._v(" Badgers Badgers Badgers")]),t._v(" "),e("p",[t._v("Use for loops (you will need more than one) to print the following lyrics from the Badger Song. You can only use the words “Badger”, “Mushroom” and “Snake” once each in your code.")]),t._v(" "),e("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/pzagBTcYsYQ?si=m3Vc66lQ4PhMfiFO",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""}}),t._v(" "),e("p",[t._v("Print 2 verses of the song as follows:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Badger, Badger, Badger, Badger, Badger, Badger, Badger,Badger, \nBadger,Badger, Badger, Badger, Mushroom, Mushroom\n\nBadger, Badger, Badger,Badger, Badger, Badger, Badger,Badger, \nBadger, Badger, Badger, Badger, Mushroom, Mushroom\n\nA Snake!!!\n")])])]),e("p",[t._v("Or maybe: 🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🍄🍄 🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🦡🍄🍄 🐍")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"600",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("h2",{attrs:{id:"more-about-range"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#more-about-range"}},[t._v("#")]),t._v(" More about range")]),t._v(" "),e("p",[t._v("Another interesting things with the loops is that "),e("code",[t._v("range")]),t._v(" can have more than\none number in it. If we put in two numbers, the values of "),e("code",[t._v("i")]),t._v(" will go from\nthe first number to "),e("em",[t._v("one minus")]),t._v(" the second number, so if you want to print\nout the numbers 4, 5, 6, 7, you would use "),e("code",[t._v("range(4,8)")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v('Try that yourself. Write a program to print "Hello" next to all of the\nnumbers from 10 to 20:')]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"212",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%23%20Change%20me%20to%20print%20Hello%20for%20the%20%0A%23%20numbers%20from%2010%20to%2020%0A%0Afor%20i%20in%20range%284%29%3A%0A%20%20%20%20print%28%22Hello%21%22%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v("But there are more interesting things about "),e("code",[t._v("range()")]),t._v(": It can take a "),e("em",[t._v("third")]),t._v("\nnumber, and all three of the numbers can be negative or positive. So you\ncould also type "),e("code",[t._v("range(10,20, 2)")]),t._v(" or "),e("code",[t._v("range(20,10,-1)")]),t._v(". Let's explore "),e("code",[t._v("range ()")]),t._v(" to figure out what the third number does.")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"348",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%23%20Change%20me%20so%20range%28%29%20has%20three%20numbers%2C%20%0A%23%20and%20try%20to%20figure%20out%20what%20the%20third%0A%23%20number%20does.%20What%20happens%20if%20you%20make%20%0A%23%20some%20of%20the%20numbers%20negative%3F%0A%0A%23%20HINT%3A%20If%20the%20third%20number%20is%20negative%2C%20%0A%23%20the%20first%20number%20should%20be%20%2Abigger%2A%20than%0A%23%20the%20second%2C%20but%20if%20the%20third%20number%20is%20positive%2C%20%0A%23%20it%20should%20be%20smaller.%20%0A%0Afor%20i%20in%20range%2810%29%3A%0A%20%20%20%20print%28%22Hello%21%22%2C%20i%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}})])}),[],!1,null,null,null);e.default=s.exports}}]);