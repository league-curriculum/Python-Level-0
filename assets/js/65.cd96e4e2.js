(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{363:function(t,e,i){"use strict";i.r(e);var s=i(14),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"iterating-over-iterables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iterating-over-iterables"}},[t._v("#")]),t._v(" Iterating over Iterables")]),t._v(" "),e("p",[t._v("Here is the first simple list that you learned about earlier.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("things_to_buy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apples'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'oranges'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bread'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'milk'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("This variable, "),e("code",[t._v("things_to_buy")]),t._v(" is interesting, because it is a list of\nstrings, but the strings are also a list, a list of letters. And in Python,\nlists and strings are a lot a like. So, let's learn more about them both.")]),t._v(" "),e("p",[t._v('Both lists and strings are "iterables". Iteration means taking things one at a\ntime, and "iterating" a list means that we will get the first thing in the\nlist, then the second, and on, until there is nothing left in the list. We have\nseen iteration before, with loops. Here are two loops,\none iterating over a list, and another iterating over a string.')]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"382",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%0Athings_to_buy%20%3D%20%5B%20%27apples%27%2C%27oranges%27%2C%27bread%27%2C%27milk%27%5D%0A%0Aprint%28%22Things%20to%20buy%3A%22%29%0Afor%20things%20in%20things_to_buy%3A%0A%20%20%20%20print%28things%29%0A%0Aprint%28%22%5CnLetters%20in%20a%20string%22%29%0Afor%20letter%20in%20%22Hello%21%22%3A%0A%20%20%20%20print%28letter%29%0A%0A%23%20Now%20change%20the%20program%20so%20that%2C%20in%20the%20second%20loop%2C%20%0A%23%20the%20program%20prints%20an%20%27x%27%20instead%20of%20an%20%27l%27%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("h2",{attrs:{id:"iterables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iterables"}},[t._v("#")]),t._v(" Iterables")]),t._v(" "),e("p",[t._v("The for loop, which looks like "),e("code",[t._v("for <variable> in <iterable>")]),t._v(" works by taking each one of the\nthings in the iterable, assigning it to the variable, then running the code in the body\nof the loop.")]),t._v(" "),e("p",[t._v("But, then you wonder, what does the code we first used for loops do? The one with "),e("code",[t._v("range()")]),t._v("\nin it?")]),t._v(" "),e("p",[t._v("Well, "),e("code",[t._v("range()")]),t._v(" is an iterable!. But it isn't a string or a list. It doesn't have anything in it.\nIt just gives you the next number. But, we can turn it into a list that does have things in it. Here is\nhow:")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%23%20Turn%20a%20range%28%29%20into%20a%20list%3A%0A%0Al%20%3D%20list%28range%285%2C%2010%29%29%0Aprint%28l%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("The reason that range() is not a list is that if you had a big range, like range(1_000_000_000),\nPython would have to store a billion numbers, and would run out of memory. But range() doesn't actually store all of those numebrs, it just counts up by 1, so it doesn't take a lot of memory )")])]),t._v(" "),e("p",[t._v("Then you put something inside "),e("code",[t._v("list()")]),t._v(", list will try to iterate the thing, and then take each\nitem and put it into a list. A string, like 'Hello World' is not a list, but we can turn it into\na list.")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%23%20Turn%20a%20stringinto%20a%20list%3A%0A%0Al%20%3D%20list%28%22Hello%20World%21%22%29%0Aprint%28l%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("p",[t._v('You can turn a string into a list. The first way breaks the list into letters ( which programmers call "characters". The second way breaks the list at a specific character.')]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"297",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%23%20A%20list%20of%20letters%0Al%20%3D%20list%28%27adefibhgc%27%29%0Aprint%28l%29%0A%0A%23%20split%20a%20string%20at%20the%20comma%20character%0As%20%3D%20%27One%2CTwo%2CThree%2CFour%27%0Al%20%3D%20s.split%28%27%2C%27%29%0A%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("h2",{attrs:{id:"sorting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sorting"}},[t._v("#")]),t._v(" Sorting")]),t._v(" "),e("p",[t._v("Wait, those letters are out of order. Let's put them back in order. There are two ways:")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"280",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Al%20%3D%20list%28%27adefibhgc%27%29%0Al.sort%28%29%0Aprint%28l%29%0Aprint%28%29%0A%0Al%20%3D%20list%28%27adefibhgc%27%29%0Al%20%3D%20sorted%28l%29%0Aprint%28l%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("h2",{attrs:{id:"adding-to-lists"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-to-lists"}},[t._v("#")]),t._v(" Adding To Lists")]),t._v(" "),e("p",[t._v("You can add items to lists with "),e("code",[t._v(".append()")]),t._v(", and concatenate lists ( put them\ntogether) with "),e("code",[t._v("+")]),t._v(":")]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"365",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0Al%20%3D%20%5B%5D%0A%0Al.append%28%27item%201%27%29%0Al.append%28%27item%202%27%29%0Al.append%28%27item%203%27%29%0A%0Al%20%20%3D%20l%20%2B%20%5B%27item%204%27%2C%20%27item%205%27%5D%0A%0Aprint%28l%29%0A%0A%0A%23%20Try%20adding%20more%20items%20to%20the%20list%21%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),e("h1",{attrs:{id:"show-us-your-lists"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#show-us-your-lists"}},[t._v("#")]),t._v(" Show Us Your Lists!")]),t._v(" "),e("p",[t._v("Now, you can write a program. Here is what your program should do.")]),t._v(" "),e("ul",[e("li",[t._v("Start with a string that has friend names, with spaces between the friend names, like\nthis, but with real names: "),e("code",[t._v("'foo bar baz'")]),t._v(". Split the list into a string.")]),t._v(" "),e("li",[t._v("Ask the user for new friend names three times, and add those names to the list")]),t._v(" "),e("li",[t._v("Sort the list")]),t._v(" "),e("li",[t._v("Print out each name on a seperate line.")])]),t._v(" "),e("iframe",{attrs:{width:"100%",height:"600",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}})])}),[],!1,null,null,null);e.default=a.exports}}]);