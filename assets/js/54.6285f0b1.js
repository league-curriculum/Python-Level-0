(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{337:function(t,a,e){"use strict";e.r(a);var n=e(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("p",[t._v("A function is like a recipe, a series of steps that the computer will follow.\nBut we've been giving the computer steps to follow all along! What is different\nabout a function? The important thing about functions is that they have\nnames, inputs, and outputs.")]),t._v(" "),a("p",[t._v("Let's imagine that you have this program to add two numbers:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("It works! But what if you want to add more than once? You'd have to write something like:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("With a function, we can stop repeating ourselves. Let's make a function for addition:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" c\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Notice that the important part of the addition procedure is now inside the\nfunction. The "),a("code",[t._v("def")]),t._v(" keyword says that we are going to "),a("em",[t._v("def")]),t._v("ine a fuction, and the\nvariables in the parentheses, "),a("code",[t._v("(a,b)")]),t._v(" are called the "),a("em",[t._v("argument list")]),t._v(". Those are the inputs to\nthe function.")]),t._v(" "),a("p",[t._v("The last line, "),a("code",[t._v("return c")]),t._v(" is the output from the function. That is the value that we want to print.")]),t._v(" "),a("p",[t._v("Notice that you've already seen functions, we've been using them all along. Here is\npart of the first program we made:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("tina "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" turtle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Turtle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntina"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'turtle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Try running this program and see what you get.")]),t._v(" "),a("iframe",{attrs:{width:"100%",height:"229",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=def%20add%28a%2C%20b%29%3A%0A%09c%20%3D%20a%20%2B%20b%0A%09return%20c%0A%0Aprint%28add%2810%2C20%29%29%0Aprint%28add%285%2C6%29%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),a("p",[t._v("Now re-write the program to multiply the two numbers.")]),t._v(" "),a("iframe",{attrs:{width:"100%",height:"263",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%23%20Change%20me%20to%20multiply%21%20Be%20sure%20to%20change%20the%0A%23%20name%20of%20the%20function.%20%0Adef%20add%28a%2C%20b%29%3A%0A%09c%20%3D%20a%20%2B%20b%0A%09return%20c%0A%0Aprint%28add%2810%2C20%29%29%0Aprint%28add%285%2C6%29%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),a("p",[t._v("You can have a different number of arguments for the input to the function.\nRe-write it again to multiply three numbers.")]),t._v(" "),a("iframe",{attrs:{width:"100%",height:"280",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=%23%20Change%20me%20to%20multiply%2C%20and%20make%20it%20multiply%20three%20numbers%21%0A%23%20Be%20sure%20to%20change%20the%20name%20of%20the%20function.%20%0Adef%20add%28a%2C%20b%29%3A%0A%09c%20%3D%20a%20%2B%20b%0A%09return%20c%0A%0Aprint%28add%2810%2C20%29%29%0Aprint%28add%285%2C6%29%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),a("h2",{attrs:{id:"make-five-cakes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#make-five-cakes"}},[t._v("#")]),t._v(" Make Five Cakes")]),t._v(" "),a("p",[t._v("Earlier we talked about how "),a("strong",[t._v("functions are like recipes")]),t._v(". In this exercise,\nwe've already taught Tina the recipe for making a picture of a cake and she's\nmade three.  Tell her to make more cakes by "),a("strong",[t._v("calling")]),t._v(" the function with\ndifferent "),a("code",[t._v("x")]),t._v(" and "),a("code",[t._v("y")]),t._v(" locations at the very bottom of the program.")]),t._v(" "),a("p",[t._v("How many cakes should she make?")]),t._v(" "),a("iframe",{attrs:{width:"100%",height:"620",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=import%20turtle%0Atina%3Dturtle.Turtle%28%29%0Atina.shape%28%27turtle%27%29%0A%0Adef%20make_cake%28x%3D0%2C%20y%3D0%29%3A%0A%20%20%20%20tina.penup%28%29%0A%20%20%20%20tina.color%28%27pink%27%29%0A%20%20%20%20tina.goto%28x%2C%20y%29%0A%20%20%20%20tina.pendown%28%29%0A%20%20%20%20tina.begin_fill%28%29%0A%20%20%20%20tina.goto%28x%20%2B%2020%2C%20y%29%0A%20%20%20%20tina.goto%28x%20%2B%2020%2C%20y%20%2B%2020%29%0A%20%20%20%20tina.goto%28x%20-%2020%2C%20y%20%2B%2020%29%0A%20%20%20%20tina.goto%28x%20-%2020%2C%20y%29%0A%20%20%20%20tina.goto%28x%2C%20y%29%20%20%0A%20%20%20%20tina.end_fill%28%29%0A%20%20%20%20tina.goto%28x%2C%20y%20%2B%2020%29%0A%20%20%20%20tina.color%28%27yellow%27%29%0A%20%20%20%20tina.goto%28x%2C%20y%20%2B%2035%29%0A%20%20%20%20tina.goto%28x%2C%20y%20%2B%2030%29%0A%20%20%20%20tina.color%28%27black%27%29%0A%20%20%20%20tina.goto%28x%2C%20y%20%2B%2020%29%0A%20%20%20%20tina.penup%28%29%0A%20%20%20%20tina.goto%28x%2C%20y%20%2B%2010%29%0A%20%20%20%20%0Amake_cake%280%2C0%29%0Amake_cake%28-100%2C0%29%0Amake_cake%28100%2C0%29%0A%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),a("p",[t._v("Hint: The first number in "),a("code",[t._v("make_cake()")]),t._v(" is "),a("strong",[t._v("how far left or right")]),t._v(" Tina should go, while the second is "),a("strong",[t._v("how high or low")]),t._v(" she should go before starting to draw.")]),t._v(" "),a("p",[t._v("Run this program, then change the program how ever you want. Some things you can try:")]),t._v(" "),a("ul",[a("li",[t._v("Change the colors of the cakes")]),t._v(" "),a("li",[t._v("Make the cakes bigger")]),t._v(" "),a("li",[t._v("Put the cakes in different places")]),t._v(" "),a("li",[t._v("Use a loop to make more cakes")])]),t._v(" "),a("h2",{attrs:{id:"functions-and-loops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions-and-loops"}},[t._v("#")]),t._v(" Functions and Loops")]),t._v(" "),a("p",[t._v("Let's update a square function one more time. This time remove the redundancy in\nthe program with a loop, but also use a function; your loop should run a\nfunction many times, and the function should draw part of the square.")]),t._v(" "),a("iframe",{attrs:{width:"100%",height:"586",src:"https://trinket.io/tools/1.0/jekyll/embed/python#code=import%20turtle%0Atina%20%3D%20turtle.Turtle%28%29%0Atina.shape%28%22turtle%22%29%0A%0Aforward%20%3D%2050%0Aleft%20%3D%2090%0A%0A%23%20First%2C%20write%20a%20function%20that%20performs%0A%23%20the%20important%20part%20of%20the%20code%20below.%20%0A%23%20Be%20sure%20to%20include%20the%20correct%20arguments%0A%23%20for%20the%20variables.%20%0A%0A%23%20Second%2C%20call%20that%20function%20from%20a%20loop%0A%23%20to%20do%20it%20the%20right%20number%20of%20times.%20%0A%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0Atina.forward%28forward%29%0Atina.left%28left%29%0A%0A%0A%0A",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:""}}),t._v(" "),a("p",[t._v("When your program is correctly drawing a square, try changing the\nvariable to see what other shapes you can make.")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Thanks to Trinket.io for providing the 5 cakes assignment, part of their\n[Hour of Python] (https://hourofpython.com/a-visual-introduction-to-python/) course.")])])}),[],!1,null,null,null);a.default=r.exports}}]);